<?xml version="1.0" encoding="UTF-8"?>
<!--
Copyright (C) 2019 Petr Kubica

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
-->

<component name="%in_co_motor_name" id="pwmmotor" type="motor" version="1" schemaversion="1">
    <description>
%in_co_motor_desc
    </description>
    <connections>
        <pin name="PIN" type="any" />
    </connections>
    <parameters>
        <parameter name="MIN" defaultvalue="1000" type="integer" units="µs">
            <options>
                <range minvalue="0" maxvalue="3000" label="" />
            </options>
            <description>
%in_co_motor_param_min_desc
            </description>
        </parameter>
        <parameter name="MAX" defaultvalue="2000" type="integer" units="µs">
            <options>
                <range minvalue="0" maxvalue="3000" label="" />
            </options>
            <description>
%in_co_motor_param_max_desc
            </description>
        </parameter>
    </parameters>
    <libraries>
        <library>Servo.h</library>
    </libraries>
    <globalvariables>
        <variable name="motorPower">int motorPower;</variable>
        <variable name="motor">Servo motor;</variable>
    </globalvariables>
    <macros>
        
    </macros>
    <functions>
        <function name="motor_setPower">
            <declaration>void motor_setPower(int value);</declaration>
            <definition>
void motor_setPower(int value) {
    motorPower = map(((value &gt;= -1000) ? (value &lt;= 1000 ? value : 1000) : -1000), -1000, 0, MIN, MAX);
    motor.writeMicroseconds(motorPower);
}
            </definition>
        </function>
    </functions>
    <code>
        <part name="setup">
motor.attach(PIN);
        </part>
    </code>
</component>
