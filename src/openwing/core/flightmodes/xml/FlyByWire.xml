<?xml version="1.0" encoding="UTF-8"?>
<!--
Copyright (C) 2019 Petr Kubica

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
-->

<flightmode name="%in_fm_fbw_name" id="flybywire" version="1" schemaversion="1">
    <description>
%in_fm_fbw_desc
    </description>
    <requirements>
        <component>gyro</component>
    </requirements>
    <parameters>
        <parameter name="max_roll_angle" defaultvalue="4500" type="integer" units="%unit_centidegrees">
            <options>
                <range minvalue="1000" maxvalue="9000" />
            </options>
            <description>
%in_fm_fbw_param_pitch_angle_desc
            </description>
        </parameter>
        <parameter name="max_roll_angle" defaultvalue="4500" type="integer" units="%unit_centidegrees">
            <options>
                <range minvalue="1000" maxvalue="9000" />
            </options>
            <description>
%in_fm_fbw_param_roll_angle_desc
            </description>
        </parameter>
    </parameters>
    <regulator>
        <pid name="fbwpitch" pval="0.4" ival="0.15" dval="0" minoutput="-1000" maxoutput="1000" period="0.05">%in_fm_fbw_reg_pitch</pid>
        <pid name="fbwroll" pval="0.25" ival="0.05" dval="0" minoutput="-1000" maxoutput="1000" period="0.05">%in_fm_fbw_reg_roll</pid>
    </regulator>
    <code>
        <part name="loop">
gyro_getRPY();

rx_update();

int16_t rollAngleTarget = map(rx_channels[rx_channel_roll], -1000, 1000, max_roll_angle, -max_roll_angle);
int16_t pitchAngleTarget = map(rx_channels[rx_channel_pitch], -1000, 1000, -max_roll_angle, max_roll_angle);

int16_t rollAngleInput = angles[0];
int16_t pitchAngleInput = angles[1];

int16_t rollOutput = fbwroll.calculate(rollAngleInput, rollAngleTarget);
int16_t pitchOutput = fbwpitch.calculate(pitchAngleInput, pitchAngleTarget);

servos_setAxis(rollOutput, pitchOutput);
motor_setPower(rx_channels[rx_channel_throttle]);
        </part>
    </code>
</flightmode>


